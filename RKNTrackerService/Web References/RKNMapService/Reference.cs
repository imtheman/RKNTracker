//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18047
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18047.
// 
#pragma warning disable 1591

namespace RKNTrackerService.RKNMapService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MapSoap", Namespace="http://rubi-ka.net/")]
    public partial class Map : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UpdateCharacterLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCharacterLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCharacterLocationsForAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCharacterLocationsByAccountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Map() {
            this.Url = global::RKNTrackerService.Properties.Settings.Default.RKNTrackerService_RKNMapService_Map;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UpdateCharacterLocationCompletedEventHandler UpdateCharacterLocationCompleted;
        
        /// <remarks/>
        public event GetCharacterLocationsCompletedEventHandler GetCharacterLocationsCompleted;
        
        /// <remarks/>
        public event GetCharacterLocationsForAdminCompletedEventHandler GetCharacterLocationsForAdminCompleted;
        
        /// <remarks/>
        public event GetCharacterLocationsByAccountCompletedEventHandler GetCharacterLocationsByAccountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rubi-ka.net/UpdateCharacterLocation", RequestNamespace="http://rubi-ka.net/", ResponseNamespace="http://rubi-ka.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCharacterLocation(Character[] Characters) {
            object[] results = this.Invoke("UpdateCharacterLocation", new object[] {
                        Characters});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCharacterLocationAsync(Character[] Characters) {
            this.UpdateCharacterLocationAsync(Characters, null);
        }
        
        /// <remarks/>
        public void UpdateCharacterLocationAsync(Character[] Characters, object userState) {
            if ((this.UpdateCharacterLocationOperationCompleted == null)) {
                this.UpdateCharacterLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCharacterLocationOperationCompleted);
            }
            this.InvokeAsync("UpdateCharacterLocation", new object[] {
                        Characters}, this.UpdateCharacterLocationOperationCompleted, userState);
        }
        
        private void OnUpdateCharacterLocationOperationCompleted(object arg) {
            if ((this.UpdateCharacterLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCharacterLocationCompleted(this, new UpdateCharacterLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rubi-ka.net/GetCharacterLocations", RequestNamespace="http://rubi-ka.net/", ResponseNamespace="http://rubi-ka.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MapLocation[] GetCharacterLocations(int AccountId) {
            object[] results = this.Invoke("GetCharacterLocations", new object[] {
                        AccountId});
            return ((MapLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCharacterLocationsAsync(int AccountId) {
            this.GetCharacterLocationsAsync(AccountId, null);
        }
        
        /// <remarks/>
        public void GetCharacterLocationsAsync(int AccountId, object userState) {
            if ((this.GetCharacterLocationsOperationCompleted == null)) {
                this.GetCharacterLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCharacterLocationsOperationCompleted);
            }
            this.InvokeAsync("GetCharacterLocations", new object[] {
                        AccountId}, this.GetCharacterLocationsOperationCompleted, userState);
        }
        
        private void OnGetCharacterLocationsOperationCompleted(object arg) {
            if ((this.GetCharacterLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCharacterLocationsCompleted(this, new GetCharacterLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rubi-ka.net/GetCharacterLocationsForAdmin", RequestNamespace="http://rubi-ka.net/", ResponseNamespace="http://rubi-ka.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MapLocation[] GetCharacterLocationsForAdmin(int AccountId) {
            object[] results = this.Invoke("GetCharacterLocationsForAdmin", new object[] {
                        AccountId});
            return ((MapLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCharacterLocationsForAdminAsync(int AccountId) {
            this.GetCharacterLocationsForAdminAsync(AccountId, null);
        }
        
        /// <remarks/>
        public void GetCharacterLocationsForAdminAsync(int AccountId, object userState) {
            if ((this.GetCharacterLocationsForAdminOperationCompleted == null)) {
                this.GetCharacterLocationsForAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCharacterLocationsForAdminOperationCompleted);
            }
            this.InvokeAsync("GetCharacterLocationsForAdmin", new object[] {
                        AccountId}, this.GetCharacterLocationsForAdminOperationCompleted, userState);
        }
        
        private void OnGetCharacterLocationsForAdminOperationCompleted(object arg) {
            if ((this.GetCharacterLocationsForAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCharacterLocationsForAdminCompleted(this, new GetCharacterLocationsForAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://rubi-ka.net/GetCharacterLocationsByAccount", RequestNamespace="http://rubi-ka.net/", ResponseNamespace="http://rubi-ka.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MapLocation[] GetCharacterLocationsByAccount(string Username, string Password) {
            object[] results = this.Invoke("GetCharacterLocationsByAccount", new object[] {
                        Username,
                        Password});
            return ((MapLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCharacterLocationsByAccountAsync(string Username, string Password) {
            this.GetCharacterLocationsByAccountAsync(Username, Password, null);
        }
        
        /// <remarks/>
        public void GetCharacterLocationsByAccountAsync(string Username, string Password, object userState) {
            if ((this.GetCharacterLocationsByAccountOperationCompleted == null)) {
                this.GetCharacterLocationsByAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCharacterLocationsByAccountOperationCompleted);
            }
            this.InvokeAsync("GetCharacterLocationsByAccount", new object[] {
                        Username,
                        Password}, this.GetCharacterLocationsByAccountOperationCompleted, userState);
        }
        
        private void OnGetCharacterLocationsByAccountOperationCompleted(object arg) {
            if ((this.GetCharacterLocationsByAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCharacterLocationsByAccountCompleted(this, new GetCharacterLocationsByAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://rubi-ka.net/")]
    public partial class Character {
        
        private int idField;
        
        private string nickNameField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string profileXMLField;
        
        private short factionField;
        
        private short breedField;
        
        private short genderField;
        
        private int photoField;
        
        private int orgField;
        
        private string orgNameField;
        
        private float xField;
        
        private float yField;
        
        private int zoneField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string NickName {
            get {
                return this.nickNameField;
            }
            set {
                this.nickNameField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProfileXML {
            get {
                return this.profileXMLField;
            }
            set {
                this.profileXMLField = value;
            }
        }
        
        /// <remarks/>
        public short Faction {
            get {
                return this.factionField;
            }
            set {
                this.factionField = value;
            }
        }
        
        /// <remarks/>
        public short Breed {
            get {
                return this.breedField;
            }
            set {
                this.breedField = value;
            }
        }
        
        /// <remarks/>
        public short Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public int Photo {
            get {
                return this.photoField;
            }
            set {
                this.photoField = value;
            }
        }
        
        /// <remarks/>
        public int Org {
            get {
                return this.orgField;
            }
            set {
                this.orgField = value;
            }
        }
        
        /// <remarks/>
        public string OrgName {
            get {
                return this.orgNameField;
            }
            set {
                this.orgNameField = value;
            }
        }
        
        /// <remarks/>
        public float X {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public float Y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        public int Zone {
            get {
                return this.zoneField;
            }
            set {
                this.zoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://rubi-ka.net/")]
    public partial class MapLocation {
        
        private string nickNameField;
        
        private string photoField;
        
        private float xField;
        
        private float yField;
        
        private int zoneField;
        
        /// <remarks/>
        public string NickName {
            get {
                return this.nickNameField;
            }
            set {
                this.nickNameField = value;
            }
        }
        
        /// <remarks/>
        public string Photo {
            get {
                return this.photoField;
            }
            set {
                this.photoField = value;
            }
        }
        
        /// <remarks/>
        public float X {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public float Y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        public int Zone {
            get {
                return this.zoneField;
            }
            set {
                this.zoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateCharacterLocationCompletedEventHandler(object sender, UpdateCharacterLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCharacterLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCharacterLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCharacterLocationsCompletedEventHandler(object sender, GetCharacterLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCharacterLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCharacterLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MapLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MapLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCharacterLocationsForAdminCompletedEventHandler(object sender, GetCharacterLocationsForAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCharacterLocationsForAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCharacterLocationsForAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MapLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MapLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCharacterLocationsByAccountCompletedEventHandler(object sender, GetCharacterLocationsByAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCharacterLocationsByAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCharacterLocationsByAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MapLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MapLocation[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591